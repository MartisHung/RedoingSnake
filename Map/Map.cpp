#include "Map.hpp"

Map::Map(){
    write(1,(char*)"press the arrow to select the Map\nAnd press enter to play",58);
    for(int8 i=0;i<MAX_OF_MAP_1_Y;i++)Map1[i] = new char [MAX_OF_MAP_X+1];
    for(int8 i=0;i<MAX_OF_MAP_2_Y;i++)Map2[i] = new char [MAX_OF_MAP_X+1];
    for(int8 i=0;i<MAX_OF_MAP_2_Y;i++)Map3[i] = new char [MAX_OF_MAP_X+1];
    const char* Map1[] = {
        "################################################################\n",
        "#                                                              #\n",
        "#                                                              #\n",
        "#                                                              #\n",
        "#                                                              #\n",
        "#                                                              #\n",
        "#                                                              #\n",
        "#                                                              #\n",
        "#                                                              #\n",
        "#                                                              #\n",
        "#                                                              #\n",
        "#                                                              #\n",
        "#                                                              #\n",
        "#                                                              #\n",
        "#                                                              #\n",
        "#                                                              #\n",
        "#                                                              #\n",
        "#                                                              #\n",
        "#                                                              #\n",
        "#                                                              #\n",
        "#                                                              #\n",
        "#                                                              #\n",
        "################################################################\n"
    };
    const char* Map2[] = {
        "################################################################\n",
        "#                                                              #\n",
        "#   ##   ##      ##########       ##########      ##   ##      #\n",
        "#                #        #       #        #                   #\n",
        "#   ##   ##      #  ####  #       #  ####  #      ##   ##      #\n",
        "#                #  #T #  #       #  #F #  #                   #\n",
        "#   #  ####  #   #  #  #  #########  #  #  #   #  ####  #      #\n",
        "#   #        #   #  #                   #  #   #        #      #\n",
        "#   #  ####  #   #  #####################  #   #  ####  #      #\n",
        "#   #        #   #                         #   #        #      #\n",
        "#      ####      ###########################      ####         #\n",
        "#                                                              #\n",
        "#      ####      ####    ####   ####    ####      ####         #\n",
        "#                  #                     #                     #\n",
        "#   ##   ##        #  ####   ###   ####  #        ##   ##      #\n",
        "#                     #T      #      F#                        #\n",
        "#   ##   ##           #  #    #    #  #           ##   ##      #\n",
        "#                        #         #                           #\n",
        "#   ####  ####           #         #           ####  ####      #\n",
        "#                  #                     #                     #\n",
        "################################################################\n"
    };
    const char* Map3[] = {
        "################################################################\n",
        "#                                                              #\n",
        "#   ####   ##################    #####   ####                  #\n",
        "#   #                                                          #\n",
        "#   #  ######    ###########     #####                         #\n",
        "#   #                                                          #\n",
        "#   #######        #########     #####   #####       #######   #\n",
        "#                 #                                            #\n",
        "#   #######       #               ####   ####        #######   #\n",
        "#   #             #                                            #\n",
        "#   #   ###    ####             ######   ######      ########  #\n",
        "#   #                                                          #\n",
        "#   #######    #######       #########   #########   ###########\n",
        "#                                                              #\n",
        "#   #######    #######      ##########   ##########            #\n",
        "#                                                              #\n",
        "#   ##########        ################                         #\n",
        "#                                                              #\n",
        "#   ###########          ###########        ###########        #\n",
        "#   #                                                          #\n",
        "#   #   ###############################   #################    #\n",
        "#   #                                                          #\n",
        "################################################################\n"
    };
    const char*Map4[]={
        "################################################################\n",
        "#                                                              #\n",
        "#                                                              #\n",
        "#                                                              #\n",
        "#    ##                                                        #\n",
        "#     #                                                        #\n",
        "#     ##           ###################C                #       #\n",
        "#     ##         #####################                #        #\n",
        "#      ##       #########                            #         #\n",
        "#      ##      #######                              #          #\n",
        "#       ##    ######                    ############           #\n",
        "#       #################         ########################     #\n",
        "#        #    C#########T         ##D                #  B#     #\n",
        "#        ##     #########         ##                 #   #     #\n",
        "#        ##        T####          ##                 #   #     #\n",
        "#        ################         ##                 #   #     #\n",
        "#                ##               ##                 #   #     #\n",
        "#                ##               ##                 #D  #     #\n",
        "#              ######             ########################     #\n",
        "#             ##    ##            B#######################     #\n",
        "#                                                              #\n",
        "#                                                              #\n",
        "################################################################\n"
    };
}

Map::~Map(){
    write(1,"finish",7);
}
void ShowMap(char** MapUsing,int8 MapSelect){
    switch(MapSelect){
        case 0:
            for(int8 i=0;i<MAX_OF_MAP_1_Y;i++) write(1,MapUsing[i],MAX_OF_MAP_X);
            break;
        case 1:
            for(int8 i=0;i<MAX_OF_MAP_2_Y;i++) write(1,MapUsing[i],MAX_OF_MAP_X);
            break;
        case 2:
            for(int8 i=0;i<MAX_OF_MAP_3_Y;i++) write(1,MapUsing[i],MAX_OF_MAP_X);
            break;
        case 3:
            for(int8 i=0;i<MAX_OF_MAP_4_Y;i++) write(1,MapUsing[i],MAX_OF_MAP_X);
            break;
    }
}
void Map::MapTransfer(char** MapUsing,int8 MapSelected)const{
    if(MapUsing!=nullptr){
        switch(MapSelected>>4){
            
        }
    }
    
    return;
}